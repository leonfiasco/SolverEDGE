// @use "sass:map";
@use "./styles/base/variables.scss" as *;
@use "./styles/mixins/layout" as layout;
@use "./styles/base/variables" as var;
@use "./styles/mixins/typography" as *;

.home {
  padding: 0;
  .container {
    .thinkingMan {
      position: relative; // Required for Next.js fill prop
      // padding-bottom: 100%; // Creates a square (1:1) aspect ratio
      // display: none; // Default hidden on mobile

      .thinkingMan {
        // position: absolute;
        width: 100%;
        height: 100%;
        object-fit: contain;
      }
    }
    .svgWrap {
      position: relative;
      .cross,
      .square,
      .triangle,
      .squiggle {
        position: absolute;
        width: 40px;
        height: 70px;
      }

      .squiggle {
        position: absolute;
        width: 100px;
        height: 70px;
      }
    }
  }

  .videoSection {
    @include layout.containerResponsiveNew($containerFull: false);
    .heroTextWrap {
      .title {
        white-space: nowrap; // Prevent line breaks
        display: flex;
        flex-wrap: wrap; // Allow wrapping if needed
        align-items: baseline; // Align text baselines
        color: $navBlue;
        font-family: "Inter";
        font-weight: 700;
        .inlineBlock {
          display: inline-block;
          white-space: normal; // Allow text wrapping inside these spans
          font-family: inherit; // Inherits from .title
          font-weight: inherit;
          .underlinedWord {
            position: relative;
            display: inline-block;

            .underlineSvg {
              position: absolute;
              bottom: 0px; // Adjust underline position
              left: 0;
              width: 100%;
              height: auto;
            }
          }
        }

        .underlineContainer {
          display: inline-flex;
          gap: 0.25em; // Small gap between words

          .underlinedWord {
            position: relative;
            display: inline-block;

            .underlineSvg {
              position: absolute;
              bottom: 0px; // Adjust underline position
              left: 0;
              width: 100%;
              height: auto;
            }
          }
        }
      }
    }
    .secondSubTxt {
      p {
        font-family: "Inter";
        font-weight: 300;
        color: $navBlue;
      }
      .btnWrap {
        display: flex;
        justify-content: center;
      }
    }

    .svgWrap {
      display: flex;
      justify-content: center;
      .arrowDown {
        width: 40px;
        height: 70px;
      }
    }
  }
}

// ==========================================================================
// Default
// // ==========================================================================

@media (min-width: var.$breakMobile) {
  .container {
    .svgWrap {
      .cross,
      .square,
      .triangle {
        width: 40px;
        height: 70px;
      }

      .cross {
        top: -240px;
        right: 20px;
      }

      .square {
        top: -225px;
        left: 20px;
      }

      .triangle {
        bottom: -75px;
        left: 20px;
      }

      .squiggle {
        bottom: -45px;
        right: 20px;
        width: 100px;
        height: 70px;
      }

      // .thinkingMan {
      //   display: none;
      // }
    }
  }

  .videoSection {
    padding-top: 70px;
    padding-bottom: 30px;
    .title {
      white-space: nowrap; // Prevent line breaks
      display: flex;
      flex-wrap: wrap; // Allow wrapping if needed
      align-items: baseline; // Align text baselines

      .inlineBlock {
        display: inline-block;
        white-space: normal; // Allow text wrapping inside these spans
        .underlinedWord {
          position: relative;
          display: inline-block;

          .underlineSvg {
            position: absolute;
            bottom: -4px; // Adjust underline position
            left: 0;
            width: 100%;
            height: auto;
          }
        }
      }

      .underlineContainer {
        display: inline-flex;
        gap: 0.25em; // Small gap between words

        .underlinedWord {
          position: relative;
          display: inline-block;

          .underlineSvg {
            position: absolute;
            bottom: -4px; // Adjust underline position
            left: 0;
            width: 100%;
            height: auto;
          }
        }
      }
    }

    .svgWrap {
      padding-top: 55px;
      padding-bottom: 30px;
      .arrowDown {
        width: 40px;
        height: 70px;
      }
    }

    .secondSubTxt {
      p {
        @include item-type-setting(14, 20, 0);
        margin-bottom: 25px;
      }
    }
  }

  .graphImages {
    display: flex;
    flex-direction: column;
    gap: 2rem; // Space between images
    width: 100%;

    .test {
      position: relative; // Required for Next.js Image fill
      width: 100%; // Take full available width
      height: 0; // Let padding control height
      padding-bottom: 30%; // Aspect ratio (adjust as needed)

      // For graphImage2 (taller aspect ratio)
      &:nth-child(2) {
        padding-bottom: 60%; // Different aspect ratio
      }
    }

    .graphImage1,
    .graphImage2 {
      position: absolute;
      width: 100%;
      height: 100%;
      object-fit: contain; // Maintain aspect ratio
    }
  }
}

// ==========================================================================
// Mobile Large
// ==========================================================================

@media (min-width: var.$breakLargeMobile) {
  .container {
    .svgWrap {
      .cross,
      .square,
      .triangle {
        width: 65px;
        height: 70px;
      }

      .cross {
        top: -220px;
        right: 60px;
      }

      .square {
        top: -250px;
      }

      .triangle {
        bottom: -115px;
        width: 50px;
        height: 70px;
      }

      .squiggle {
        bottom: -60px;
        right: 20px;
        width: 150px;
        height: 90px;
      }
    }
  }

  .videoSection {
    padding-top: 100px;
    .heroTextWrap {
      .title {
        justify-content: center;
      }
    }

    .secondSubTxt {
      p {
        text-align: center;
      }
    }

    .arrowDown {
      width: 45px;
      height: 85px;
    }
  }

  .graphImages {
    div {
      .graphImage1 {
        width: 480px;
        height: 120px;
      }
      .graphImage2 {
        width: 486px;
        height: 308px;
      }
    }
  }
}

// ==========================================================================
// Tablet
// ==========================================================================

@media (min-width: var.$breakTablet) {
  .container {
    height: 500px;
    .svgWrap {
      .triangle {
        bottom: 550px !important;
        left: 415px !important;
        width: 60px !important;
      }
      .cross {
        top: -615px;
        width: 55px !important;
      }

      .square {
        left: 315px !important;
        width: 60px !important;
      }

      .squiggle {
        bottom: 165px !important;
        width: 125px !important;
      }
    }
    .thinkingMan {
      display: block;
      position: absolute;
      top: -230px;
      left: 385px;
      width: 350px;
      height: 350px;
      padding-bottom: 0;
    }
  }

  .videoSection {
    padding-top: 30px;
    .heroTextWrap {
      .title {
        justify-content: flex-start;
        width: 310px;
        @include item-type-setting(27, 33, 0);
      }
    }

    .secondSubTxt {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      p {
        width: 460px;
        span {
          font-family: "Inter";
          font-weight: 700;
        }
      }
    }
  }
}

// ==========================================================================
// Desktop
// ==========================================================================
@media (min-width: var.$breakDesktop) {
  .container {
    .svgWrap {
      .cross,
      .square,
      .triangle {
        width: 112px;
        height: 100px;
      }

      .squiggle {
        width: 190px;
        height: 100px;
      }
    }
  }
}

// ==========================================================================
// HD
// ==========================================================================
@media (min-width: var.$breakHd) {
  .container {
  }
}
